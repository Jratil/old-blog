<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.jratil.blog.mapper.UserRoleMapper">
  <resultMap id="BaseResultMap" type="co.jratil.blog.pojo.dataobject.UserRole">
    <constructor>
      <idArg column="author_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="role" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    author_id, role
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_role
    where author_id = #{authorId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user_role
    where author_id = #{authorId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="co.jratil.blog.pojo.dataobject.UserRole">
    insert into user_role (author_id, role)
    values (#{authorId,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="co.jratil.blog.pojo.dataobject.UserRole">
    insert into user_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="authorId != null">
        author_id,
      </if>
      <if test="role != null">
        role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="authorId != null">
        #{authorId,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="co.jratil.blog.pojo.dataobject.UserRole">
    update user_role
    <set>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
    </set>
    where author_id = #{authorId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="co.jratil.blog.pojo.dataobject.UserRole">
    update user_role
    set role = #{role,jdbcType=VARCHAR}
    where author_id = #{authorId,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="co.jratil.blog.pojo.dataobject.UserRole">
    <constructor>
      <idArg column="author_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="role" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    author_id, role
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_role
    where author_id = #{authorId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user_role
    where author_id = #{authorId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="co.jratil.blog.pojo.dataobject.UserRole">
    insert into user_role (author_id, role)
    values (#{authorId,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="co.jratil.blog.pojo.dataobject.UserRole">
    insert into user_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="authorId != null">
        author_id,
      </if>
      <if test="role != null">
        role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="authorId != null">
        #{authorId,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="co.jratil.blog.pojo.dataobject.UserRole">
    update user_role
    <set>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
    </set>
    where author_id = #{authorId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="co.jratil.blog.pojo.dataobject.UserRole">
    update user_role
    set role = #{role,jdbcType=VARCHAR}
    where author_id = #{authorId,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="co.jratil.blog.pojo.dataobject.UserRole">
    <constructor>
      <idArg column="author_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="role" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    author_id, role
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_role
    where author_id = #{authorId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user_role
    where author_id = #{authorId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="co.jratil.blog.pojo.dataobject.UserRole">
    insert into user_role (author_id, role)
    values (#{authorId,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="co.jratil.blog.pojo.dataobject.UserRole">
    insert into user_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="authorId != null">
        author_id,
      </if>
      <if test="role != null">
        role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="authorId != null">
        #{authorId,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="co.jratil.blog.pojo.dataobject.UserRole">
    update user_role
    <set>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
    </set>
    where author_id = #{authorId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="co.jratil.blog.pojo.dataobject.UserRole">
    update user_role
    set role = #{role,jdbcType=VARCHAR}
    where author_id = #{authorId,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="co.jratil.blog.pojo.dataobject.UserRole">
    <constructor>
      <idArg column="author_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="role" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    author_id, role
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_role
    where author_id = #{authorId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user_role
    where author_id = #{authorId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="co.jratil.blog.pojo.dataobject.UserRole">
    insert into user_role (author_id, role)
    values (#{authorId,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="co.jratil.blog.pojo.dataobject.UserRole">
    insert into user_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="authorId != null">
        author_id,
      </if>
      <if test="role != null">
        role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="authorId != null">
        #{authorId,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="co.jratil.blog.pojo.dataobject.UserRole">
    update user_role
    <set>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
    </set>
    where author_id = #{authorId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="co.jratil.blog.pojo.dataobject.UserRole">
    update user_role
    set role = #{role,jdbcType=VARCHAR}
    where author_id = #{authorId,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="co.jratil.blog.pojo.dataobject.UserRole">
    <constructor>
      <idArg column="author_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="role" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    author_id, role
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_role
    where author_id = #{authorId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user_role
    where author_id = #{authorId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="co.jratil.blog.pojo.dataobject.UserRole">
    insert into user_role (author_id, role)
    values (#{authorId,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="co.jratil.blog.pojo.dataobject.UserRole">
    insert into user_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="authorId != null">
        author_id,
      </if>
      <if test="role != null">
        role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="authorId != null">
        #{authorId,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="co.jratil.blog.pojo.dataobject.UserRole">
    update user_role
    <set>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
    </set>
    where author_id = #{authorId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="co.jratil.blog.pojo.dataobject.UserRole">
    update user_role
    set role = #{role,jdbcType=VARCHAR}
    where author_id = #{authorId,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="co.jratil.blog.pojo.dataobject.UserRole">
    <constructor>
      <idArg column="author_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="role" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    author_id, role
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_role
    where author_id = #{authorId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user_role
    where author_id = #{authorId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="co.jratil.blog.pojo.dataobject.UserRole">
    insert into user_role (author_id, role)
    values (#{authorId,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="co.jratil.blog.pojo.dataobject.UserRole">
    insert into user_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="authorId != null">
        author_id,
      </if>
      <if test="role != null">
        role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="authorId != null">
        #{authorId,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="co.jratil.blog.pojo.dataobject.UserRole">
    update user_role
    <set>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
    </set>
    where author_id = #{authorId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="co.jratil.blog.pojo.dataobject.UserRole">
    update user_role
    set role = #{role,jdbcType=VARCHAR}
    where author_id = #{authorId,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="co.jratil.blog.pojo.dataobject.UserRole">
    <constructor>
      <idArg column="author_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="role" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    author_id, role
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_role
    where author_id = #{authorId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user_role
    where author_id = #{authorId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="co.jratil.blog.pojo.dataobject.UserRole">
    insert into user_role (author_id, role)
    values (#{authorId,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="co.jratil.blog.pojo.dataobject.UserRole">
    insert into user_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="authorId != null">
        author_id,
      </if>
      <if test="role != null">
        role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="authorId != null">
        #{authorId,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="co.jratil.blog.pojo.dataobject.UserRole">
    update user_role
    <set>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
    </set>
    where author_id = #{authorId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="co.jratil.blog.pojo.dataobject.UserRole">
    update user_role
    set role = #{role,jdbcType=VARCHAR}
    where author_id = #{authorId,jdbcType=VARCHAR}
  </update>
</mapper>